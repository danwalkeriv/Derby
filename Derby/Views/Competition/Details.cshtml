@using System.Activities.Expressions
@using System.EnterpriseServices
@using Derby.Infrastructure
@using Derby.Models
@using Microsoft.Ajax.Utilities
@using Microsoft.Web.Infrastructure
@model Derby.ViewModels.CompetitionViewModel

@{
    ViewBag.Title = "Details";
}

<h3><i class="fa fa-trophy"></i>  - @Html.DisplayFor(model => model.Title) <small>Admin Dashboard</small></h3>

<div>
    <div class="row">
        <div class="col-md-5">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <div class="row">

                        <div class="col-xs-3">
                            <h4 class="panel-title"><i class="fa fa-group fa-1x"></i> Scouts</h4>
                        </div>
                        <div>
                            <a class="modal-link btn btn-success btn-xs pull-right addscout-pad" title="Quick Add Scout" href="@Url.Action("AddScout", "scout", new { id = Model.Pack.Id })">
                                <i class="fa fa-user"><i class="adduser fa fa-plus fa-xs"></i></i>
                            </a> &nbsp;&nbsp;&nbsp;
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="table-responsive">
                        @{
                            //, returnPath = "competition"
                            bool registrationCompleted = true;
                            Den finalsDen = Model.Dens.FirstOrDefault(x => x.IsSystemPlaceholder == true);
                        }
                        <table id="dashboard-scouts" class="table table-hover tablesorter table-condensed ">
                            <thead>
                                <tr>
                                    <th class="header">Name</th>
                                    <th class="header">Registered</th>
                                    <th class="header">Car #</th>
                                    <th class="header">Points</th>
                                    <th class="header">Den</th>
                                    <th class="header"><i class="fa fa-trophy" title="Finals"></i></th>
                                    <th class="header"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    // TODO Pull this out into another partial or user control, or whatever the hell is used now, something able to be reloaded easily
                                }
                                @foreach (var scout in Model.Scouts)
                                {
                                    // TODO This is all wrong and isn't good. Something is still wrong in the data model. I think. Or maybe I'm wrong and it's just late. 
                                    var _currentRacer = scout;
                                    var _racer = Model.Racers.Where(y => !y.Den.IsSystemPlaceholder).FirstOrDefault(x => x.Scout.Id == _currentRacer.Id);
                                    if (_racer == null && scout.Inactive)
                                    {
                                        continue;
                                    }
                                    <tr>
                                        <td>@_currentRacer.Name</td>
                                        @if (_racer != null)
                                        {
                                            List<Heat> _racerHeats = Model.Races.Where(x => x.DenId == _racer.Den.Id).SelectMany(h => h.Heats).ToList();
                                            List<Contestant> _contestants = _racerHeats.SelectMany(x => x.Contestants.Where(y => y.RacerId == _racer.Id)).ToList();
                                            int _points = 0;
                                            foreach (var item in _contestants)
                                            {
                                                if (item.Place != 0)
                                                {
                                                    _points = _points + PointsCalculator.Calculate(Model.LaneCount, item.Place);
                                                }
                                            }
                                            <td><i class="success glyphicon glyphicon-ok"></i></td>
                                            <td>@_racer.CarNumber</td>
                                            <td>
                                                @_points
                                            </td>
                                            
                                            <td><img src="@_racer.Den.LogoPath" class="denlogo-xxsmall" /></td>
                                            
                                            <td>
                                                @if (Model.Racers.Where(y => y.Den.IsSystemPlaceholder).Any(x => x.Scout.Id == _currentRacer.Id))
                                                {
                                                    <i class="success glyphicon glyphicon-ok"></i>
                                                }
                                            </td>
                                            
                                            <td>
                                                <a href="@Url.Action("Edit", "Racer", new { id = _racer.Id })">
                                                    <i class="fa fa-pencil text-muted"></i>
                                                </a>
                                            </td>
                                        }
                                        else
                                        {
                                            if (!Model.RegistrationLocked)
                                            {
                                                <td colspan="6">
                                                    <a href="@Url.Action("Create", "Racer", new {competitionId = Model.Id, scoutId = _currentRacer.Id})" class="btn btn-xs btn-success" title="Register Racer">
                                                        <i class="fa fa-user"></i>&nbsp;Register Racer
                                                    </a>
                                                </td>
                                            }
                                            registrationCompleted = false;
                                        }

                                    </tr>
                                }
                            </tbody>
                        </table>



                    </div>
                </div>
                @*<div class="text-right">
                    <a href="#">View All Activity <i class="fa fa-arrow-circle-right"></i></a>
                </div>*@
            </div>
            @{
                var _startFinals = false;

                //foreach (var item in Model.Races.Where(x => !x.Den.IsSystemPlaceholder).SelectMany(b => b.Heats).Distinct().ToList())
                //{
                //    if (item.IsCompleted)
                //    {
                        _startFinals = true;
                //        continue;
                //    }

                //    _startFinals = false;
                //}
            }
            @if (registrationCompleted)
            {

                <div class="alert alert-success">
                    <h4><i class="fa fa-check-circle"></i> Registration Completed!</h4>
                    @if (!Model.RegistrationLocked)
                    {
                        <small><i class="fa fa-lock"></i>@Html.ActionLink("Lock registration", "Lock", "Competition", new {id = Model.Id}, null)</small>
                    }
                </div>

                if (_startFinals)
                {
                    <div class="alert alert-success">
                        <h4><i class="fa fa-trophy"></i> Start the Finals</h4>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-warning">
                    <p><i class="fa fa-warning"></i> Complete Scout Registration</p>
                </div>
            }
            <div class="alert alert-info">
                <a href="@Url.Action("leaderboard", "Competition", new { id = Model.Id })" target="_blank" class="modal-link">
                    <i class="fa fa-rotate-90 fa-sitemap"></i> See Leaderboard
                </a>
            </div>
        </div>
        

        <div class="col-md-5">
            @foreach (var den in Model.Dens)
            {
                if (!_startFinals && den.IsSystemPlaceholder)
                {
                    continue;
                }
                
                Den _den = den;
                var _racers = Model.Racers.Where(x => x.Den.Id == _den.Id).ToList();

                int racerCount = _racers.Count();
                string panelStatus = "panel-info";

                if (racerCount <= 1)
                {
                    panelStatus = "panel-danger";
                }
                
                var race = Model.Races.FirstOrDefault(x => x.DenId == den.Id);
                int heatCount = 0;
                if (race != null)
                {
                    heatCount = race.Heats.Count;
                }

                var heatsNeeded = HeatGenerator.GenerateHeatCount(Model.LaneCount, racerCount);
                
                <div class="panel @panelStatus">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-6">
                                @if (_den.LogoPath != "")
                                {
                                    <img src="@_den.LogoPath" class="denlogo-small" />
                                }
                            </div>
                            <div class="col-xs-6 text-right">
                                <div class="announcement-text"><strong>@den.Name</strong></div>
                                <div class="announcement-text">Racers - @racerCount</div>
                                <div class="announcement-text">Heats - @heatCount</div>
                                <div class="announcement-text">Heats Needed - @heatsNeeded</div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="panel-footer announcement-bottom">
                        @if ((den.IsSystemPlaceholder && racerCount == 0) || racerCount <= 1)
                        {
                            if (den.IsSystemPlaceholder)
                            {
                                // Build the Finals "den". This is first, but really it builds last. Because oh idk, tequila. 
                                if (race == null)
                                {
                                    // Even though this doesn't show, just in case someone deleted it.
                                    <div class="row">
                                        <a href="@Url.Action("Create", "Race", new {competitionId = Model.Id, denId = _den.Id, returnPath = "competition"})">
                                            <div class="col-xs-7">
                                                Create Race for Finals
                                            </div>
                                            <div class="text-right">
                                                <i class="fa fa-arrow-circle-right denheat-go"></i>
                                            </div>
                                        </a>
                                    </div>
                                }
                                else
                                {
                                    <div class="row">
                                        <a href="@Url.Action("Leaders", "Competition", new {id = Model.Id, returnPath = "competition"})" target="_blank">
                                            <div class="col-xs-7">
                                                See Leaderboard
                                            </div>
                                            <div class="text-right">
                                                <i class="fa fa-arrow-circle-right denheat-go"></i>
                                            </div>
                                        </a>
                                        
                                        <a href="@Url.Action("Finals", "Racer", new { competitionId = Model.Id, denId = _den.Id, returnPath = "competition" })">
                                            <div class="col-xs-7">
                                                Select Racers for Finals
                                            </div>
                                            <div class="text-right">
                                                <i class="fa fa-arrow-circle-right denheat-go"></i>
                                            </div>
                                        </a>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-xs-6">
                                        Assign Scouts
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            // Build the actual dens/family type groupings. 
                            if (race == null)
                            {
                                <div class="row">
                                    <a href="@Url.Action("Create", "Race", new { competitionId = Model.Id, denId = _den.Id, returnPath = "competition"})" title="Will create the Race stub for heats to be created under">
                                        <div class="col-xs-7">
                                            Build Race for Den
                                        </div>
                                        <div class="text-right">
                                            <i class="fa fa-arrow-circle-right denheat-go"></i>
                                        </div>
                                    </a>
                                </div>
                            }
                            else
                            {
                                var heats = race.Heats;

                                if (heats.Any())
                                {
                                    int heatLoopCount = 0;
                                    foreach (var heat in heats)
                                    {
                                        var _heat = heat;
                                        heatLoopCount++;
                                        if (!_heat.IsCompleted)
                                        {
                                            <div class="row">
                                                <a href="@Url.Action("Run", "Heat", new {id = _heat.Id})">
                                                    <div class="col-xs-7">
                                                        Heat #@heatLoopCount
                                                    </div>
                                                    <div class="col-xs-4 text-right">
                                                        @if (heat.TieBreaker)
                                                        {
                                                            <span class="text-warning" title="Tie breaker">
                                                                <i class="fa fa-flag-checkered"></i>
                                                                &nbsp;
                                                                &nbsp;
                                                            </span>
                                                        }
                                                        <i class="fa fa-arrow-circle-right"></i>
                                                    </div>
                                                </a>
                                                <i class=""></i>
                                                <a class="col-xs-1 text-warning" href="@Url.Action("Edit", "Heat", new {id = _heat.Id, raceId = heat.RaceId, message = "editing"})" title="Edit results">
                                                    <i class="fa fa-wrench"></i>
                                                </a>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="row">
                                                
                                                <div class="col-xs-6">
                                                    Heat #@heatLoopCount
                                                </div>
                                                <div class="col-xs-6 text-right">
                                                    @if (heat.TieBreaker)
                                                    {
                                                        <span class="text-warning" title="Tie breaker">
                                                            <i class="fa fa-flag-checkered"></i>
                                                            &nbsp;
                                                            &nbsp;
                                                        </span>
                                                    }
                                                    <a href="@Url.Action("Run", "Heat", new {id = _heat.Id, message = "editing"})" title="Edit results">
                                                        <i class="fa fa-wrench"></i>
                                                    </a>
                                                </div>
                                                
                                            </div>
                                        }
                                    }
                                }
                                // Show this always, but "mute" it once all of the heats have been created
                                string addHeat = "text-danger";
                                string linkText = "Add Heat for Den";
                                if (heats.Any() && heats.Count() >= heatsNeeded)
                                {
                                    addHeat = "text-muted";
                                    linkText = "Add tie-breaker Heat";
                                }
                                <div class="row">
                                    <a class="@addHeat" href="@Url.Action("Create", "Heat", new {raceId = race.Id, returnPath = "competition"})">
                                        <div class="col-xs-6">
                                            @linkText
                                        </div>
                                        <div class="col-xs-6 text-right">
                                            <i class="fa fa-arrow-circle-right"></i>
                                        </div>
                                    </a>
                                </div>
                                if (heats.Count() >= heatsNeeded)
                                {
                                    <div class="row">
                                        <a class="text-success" href="@Url.Action("Results", "Competition", new {id = Model.Id, raceId = race.Id, returnPath = "competition"})">
                                            <div class="col-xs-6">
                                                View Results
                                            </div>
                                            <div class="col-xs-6 text-right">
                                                <i class="fa fa-arrow-circle-right"></i>
                                            </div>
                                        </a>
                                    </div>
                                }
                            }
                        }
                    </div>
                    
                </div>
            }
        </div>
    </div>
</div>

<p>
    @Html.ActionLink("Edit", "Edit", "Competition", new { id = Model.Id }, new { @class = "btn btn-xs btn-primary" }) |
    @Html.ActionLink("Back to Pack", "Details", "Pack", new { id = Model.PackId }, new { @class = "btn btn-xs btn-default" })
</p>

@section Scripts {
    <script type="text/javascript">
        $(document).ajaxSuccess(function() {
            $('#scoutAddPartial').click(function(e) {
                e.preventDefault();
                var f = $("#scoutAddForm");
                var url = f.attr("action");
                var formData = f.serialize();
                $.post(url, formData, function(data) {
                    if (data == "false") {
                        //TODO pop up some failed notification
                    }
                    $('#modal-container').modal('hide');
                    toastr.success('You added ' + data.Name);

                }).fail(function () {
                    
                    toastr.error('Scout has not been added');

                });
            });
        });
    </script>
}